service: rsschool-s3-service


provider: 
  name: aws
  runtime: nodejs14.x
  region: "eu-west-1"

  iamRoleStatements: 
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource: 
        - "arn:aws:s3:::rsschool-s3-service"
    - Effect: "Allow"
      Action: 
        - "s3:*"
      Resource: 
        - "arn:aws:s3:::rsschool-s3-service/*"    
    - Effect: "Allow"
      Action: 
        - "sqs:*"
      Resource:
        - Fn::GetAtt: [ SQSQueue, Arn ]
    - Effect: "Allow"
      Action:
        - "sns:*"
      Resource:
        Ref: SNSTopic      

  environment:
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties: 
        TopicName: createProductTopic      
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: rusakk@mail.ru
        Protocol: email
        TopicArn: 
          Ref: SNSTopic       

functions: 
  importProductsFile:
    handler: handler.importProductsFile
    events:  
      - http: 
          method: GET
          path: "import/"
          request: 
            parameters:
              querystrings: 
                name: true
  importFileParser:
    handler: handler.importFileParser
    events: 
      - s3: 
          bucket: rsschool-s3-service
          event: s3:ObjectCreated:*
          rules:
            - prefix: 'uploaded/'
          existing: true  
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events: 
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn        